apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: yorkie
  namespace: yorkie
spec:
  host: yorkie
  trafficPolicy:
    portLevelSettings:
      - port:
          number: {{ .Values.ports.sdkPort }}
        # load balance yorkie sdk traffic to yorkie servers by ring hash(consistent hashing) algorithm
        # using `x-api-key` request header as hash parameter
        loadBalancer:
          consistentHash:
            {{- if .Values.consistentHash.maglev.enabled }}
            maglev:
              tableSize: {{ .Values.consistentHash.maglev.tableSize }}
            {{- end }}
            {{- if .Values.consistentHash.ringHash.enabled }}
            ringHash:
              minimumRingSize: {{ .Values.consistentHash.ringHash.minimumRingSize }}
            {{- end }}
            httpHeaderName: {{ .Values.consistentHash.httpHeaderName }}
      - port:
          number: {{ .Values.ports.adminPort }}
        # load balance yorkie admin traffic by simply send traffic to least requested server
        loadBalancer:
          simple: LEAST_REQUEST
